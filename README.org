*Stem Orchestra Performance Project*

Create an application for mapping projection triggerd by OSC messages. Use *SuperCollider* as an interpreter language.

* Manual
*keyboard shorcuts*
- =m=: to view toolbar

*SuperCollider*
- Open =Stem_SC.scd= file

*OSC Responders*

1. =OF.projection(0,2)=
2. =OF.filter(shaderID)=
   1. shaderID: 0 -> no shader
   2. shaderID: 1~9
3. =OF.videoPos(videoID,frameNum)=
4. =OF.videoSpeed(videoID,speed)=

*Phrases*

1. =phrase_1= : implement glitch effect
2. =phrase_2= : switch videos beetwen projections


#+BEGIN_EXAMPLE
//PHRASES
NetAddr(hostname:"localhost", port:57120).sendMsg("phrase_1")
NetAddr(hostname:"localhost", port:57120).sendMsg("phrase_2")
(
~phrase_1.remove;
~phrase_1 = OSCresponder.new(nil, "phrase_1", {
	arg time, resp, msg;
	("ok"+xrand(10)).postln;
	{
		20.do{ |i|
			OF.filter(xrand(7));
			0.1.wait;
			OF.filter(0);
		}
	}.fork;
} ).add;
)

(
~phrase_2.remove;
~phrase_2 = OSCresponder.new(nil, "phrase_2", {
	arg time, resp, msg;
	"phrase 2".postln;
	{
		20.do{ |i|
			OF.projection(rrand(0,2).asInt,rrand(0,2).asInt);
			0.1.wait;
		}
	}.fork;
} ).add;
)

#+END_EXAMPLE
* openFrameworks Addons Dependencies
- ofxMtlMapping2D (https://github.com/morethanlogic/ofxMtlMapping2D)
- ofxPostGlitch (https://github.com/maxillacult/ofxPostGlitch)
- ofxOsc
- ofxXmlSettings
- ofxMSAInteractiveObject
- ofxUI
* TODO things for an interesting performance
- [ ] Createe videos and find interesting positions inside them!
