#+TITLE: Stem Orchestra Performance Project

/Create an application for mapping projection triggerd by OSC messages. Use *SuperCollider* as an interpreter language./

* Manual
*keyboard shorcuts*
- =m=: to view toolbar
- =f=: to switch to fulscreen

*SuperCollider*
- Open =Stem_SC.scd= file

*OSC Responders*

1. Send video to projection
   1. OSC message name =/projection= with arguments =0,1,2,3,4,5,6,7,8,9=
   2. OSC message name =/projection= with arguments =0,0,0,0,0,0,0,0,0,0= (send video 0 to all projection)
2. =/filter, shaderID, milliseconds=
#+BEGIN_EXAMPLE

        case 1: myGlitch.setFx(OFXPOSTGLITCH_CONVERGENCE,    true);break;
        case 2: myGlitch.setFx(OFXPOSTGLITCH_SHAKER,         true);break;
        case 3: myGlitch.setFx(OFXPOSTGLITCH_CUTSLIDER,         true);break;
        case 4: myGlitch.setFx(OFXPOSTGLITCH_CR_HIGHCONTRAST,true);break;
        case 5: myGlitch.setFx(OFXPOSTGLITCH_CR_BLUERAISE,   true);break;
        case 6: myGlitch.setFx(OFXPOSTGLITCH_CR_REDRAISE,    true);break;
#+END_EXAMPLE
3. =/videoSec, videoID videoPositionInMilliseconds=
4. =/videoSpeed, videoID, speedVideo=

*Phrases*

1. =phrase_1= : implement glitch effect
2. =phrase_2= : switch videos beetwen projections

*Create different scenes*

1. =state, "150318_1"_=
2. =state, "main"_=
* Use Emacs as interpreter for sending OSC messages
#+BEGIN_EXAMPLE


*Send different video to different projection*
(osc-send-message of-client "/projection" 0 1 2 3 4 5 6 7 8 9 10)
(osc-send-message of-client "/projection" 10 11 12 13 14 15 16 17 18 19 10)
(osc-send-message of-client "/projection" 3 11 12 13 14 15 16 17 18 19 10)
(osc-send-message of-client "/projection" 4 21 22 23 24 25 26 27 28 29 20)
(osc-send-message of-client "/projection" 6 31 32 33 34 35 36 37 38 39 30)
(osc-send-message of-client "state" "150318_1")
(osc-send-message of-client "filter" 2)
(osc-send-message of-client "filter" 0)

(osc-send-message of-client "/videoSec" 1 1)
(osc-send-message of-client "/videoSpeed" 1 10)

(osc-send-message of-client "/filter" 3 2000)
#+END_EXAMPLE

* openFrameworks Addons Dependencies
- ofxMtlMapping2D (https://github.com/morethanlogic/ofxMtlMapping2D)
- ofxPostGlitch (https://github.com/maxillacult/ofxPostGlitch)
- ofxOsc
- ofxXmlSettings
- ofxMSAInteractiveObject
- ofxUI
