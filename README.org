*Stem Orchestra Performance Project*

Create an application for mapping projection triggerd by OSC messages. Use *SuperCollider* as an interpreter language.

* Manual
*keyboard shorcuts*
- =m=: to view toolbar

*SuperCollider*
- Open =Stem_SC.scd= file

*OSC Responders*

1. =OF.projection(0,2)=
2. =OF.filter(shaderID)=
   1. shaderID: 0 -> no shader
   2. shaderID: 1~9
3. =OF.videoPos(videoID,frameNum)=
4. =OF.videoSpeed(videoID,speed)=

*Phrases*

1. =phrase_1= : implement glitch effect
2. =phrase_2= : switch videos beetwen projections

*Create different scenes*

#+BEGIN_EXAMPLE
	if (key == 'p') _mapping->init(ofGetWidth(), ofGetHeight(), "mapping/xml/state1.xml", "mapping/controls/mapping.xml");
	if (key == 'o') _mapping->init(ofGetWidth(), ofGetHeight(), "mapping/xml/state2.xml", "mapping/controls/mapping.xml");
#+END_EXAMPLE


* openFrameworks Addons Dependencies
- ofxMtlMapping2D (https://github.com/morethanlogic/ofxMtlMapping2D)
- ofxPostGlitch (https://github.com/maxillacult/ofxPostGlitch)
- ofxOsc
- ofxXmlSettings
- ofxMSAInteractiveObject
- ofxUI
* TODO things for an interesting performance
- [ ] Createe videos and find interesting positions inside them!
